(define (fermat-test n)
  (define (expmod base exp mod)
    (cond ((= exp 0) 1)
          ((even? exp) (modulo (square (expmod base (/ exp 2) mod)) mod))
          (else (modulo (* (expmod base (- exp 1) mod) base) mod))))
  (define (try-each cur)
    (define (try-it a)
      (cond ((= (expmod a n n) a) #t)
            (else (display a)
                  (display " faild test.")
                  (newline))))
    (cond ((>= cur n) #t)
          (else
           (try-it cur)
           (try-each (+ cur 1)))))
  (display "******************* begin test: ")
  (display n)
  (display " *******************")
  (newline)
  (try-each 1))

(map fermat-test '(561 1105 1729 2465 2821 6601))
(map fermat-test '(10 20 30 40))
